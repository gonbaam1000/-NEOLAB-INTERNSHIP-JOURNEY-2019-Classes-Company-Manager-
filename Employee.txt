using System;
using CompanyManager;

namespace QuanLyNhanVien
{
    //khai bao lop truu tuong
    abstract class Employee
    {
        
        public TheLoaiNhanVien LoaiNhanVien;
        public string Ten;
        protected double ThuNhap;
        protected DateTime NgayThue;

        public CompanyManager.TheLoaiNhanVien EmployeeType { get; internal set; }

        public abstract double TinhLuong();
        public abstract Employee NangCao(double Thunhapmoi = 500);
    }

   //t?o class nhan vien lam viec theo gio
    class HourlyEmployee : Employee
    {
       
        internal HourlyEmployee(string EmployeeName, double HourlyIncome, TheLoaiNhanVien NewEmployeeType = TheLoaiNhanVien.Hourly)
        {
            NgayThue = DateTime.Now;
            Ten = EmployeeName;
            ThuNhap = HourlyIncome;
            LoaiNhanVien = NewEmployeeType;
            Console.WriteLine($"{Ten}, da duoc thue{LoaiNhanVien}, voi thu nhap {ThuNhap}");
        }

       
        public override double TinhLuong()
        {
            Console.WriteLine("den bay gio nhan vien da " + Math.Round(DateTime.Now.Subtract(NgayThue).TotalHours * ThuNhap));
            return ThuNhap;
        }

        public override Employee NangCao(double Thunhapmoi)
        {
            return new SalariedEmployee(Ten, Thunhapmoi);
        }
    }
    //tao class nhan vien lam viec theo ngay
    class SalariedEmployee : HourlyEmployee
    {
        internal SalariedEmployee(string EmployeeName, double MonthlyIncome, TheLoaiNhanVien NewEmployeeType = TheLoaiNhanVien.Salaried)
            : base(EmployeeName, MonthlyIncome, NewEmployeeType) { }

        public override double TinhLuong()
        {
            Console.WriteLine("den bay gio nhan vien da: " + Math.Round(DateTime.Now.Subtract(NgayThue).TotalDays * ThuNhap ));
            return ThuNhap;
        }

        public override Employee NangCao(double Thunhapmoi)
        {
            return new Manager(Ten, ThuNhap);
        }
    }
    //tao class quan ly
    class Manager : SalariedEmployee
    {
        internal Manager(string EmployeeName, double MonthlyIncome, double HesotangQuanly = 1.25, TheLoaiNhanVien NewEmployeeType = TheLoaiNhanVien.Manager)
            : base(EmployeeName, MonthlyIncome * HesotangQuanly, NewEmployeeType) { }

        public override Employee NangCao(double Thunhapmoi)
        {
            return new Executive(Ten, ThuNhap);
        }
    }
    //tao class nguoi dieu hanh
    sealed class Executive : Manager 
    {
        internal Executive(string EmployeeName, double MonthlyIncome, double HesotangDieuhanh = 1.5)
            : base(EmployeeName, MonthlyIncome, HesotangDieuhanh, TheLoaiNhanVien.Executive) { }

        public override Employee NangCao(double Thunhapmoi)
        {
            Console.WriteLine("KO co chuc vu cao hon!!!");
            return this;
        }
    }
   
}
